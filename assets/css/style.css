*,::after,::before{box-sizing:border-box}@media (prefers-reduced-motion:no-preference){:root{scroll-behavior:smooth}}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}hr{margin:0;color:inherit;background-color:currentColor;border:0;opacity:.25}hr:not([size]){height:1px}.h1:first-child,.h2:first-child,.h3:first-child,.h4:first-child,.h5:first-child,.h6:first-child,h1:first-child,h2:first-child,h3:first-child,h4:first-child,h5:first-child,h6:first-child{padding-top:0}.h1:last-child,.h2:last-child,.h3:last-child,.h4:last-child,.h5:last-child,.h6:last-child,h1:last-child,h2:last-child,h3:last-child,h4:last-child,h5:last-child,h6:last-child,ol:last-child,p:last-child,ul:last-child{margin-bottom:0}abbr[data-bs-original-title],abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul{padding:0}ul{margin:0 0 25px 20px;list-style:disc inside}ul ul{list-style-type:circle}ul ul ul{list-style-type:square}ol{margin:0 0 25px 25px;list-style-position:inside}label,ol.wp-block-list .block-editor-rich-text__editable,output,ul.wp-block-list .block-editor-rich-text__editable{display:inline-block}dl{margin-bottom:20px}dd{margin:0 20px 20px}dt{font-weight:700}blockquote,q{padding:0 0 0 40px;position:relative;display:block}b,strong{font-weight:bolder}small{font-size:80%}mark{background-color:#fcf8e3}sub,sup{position:relative;font-size:.75rem;line-height:0;vertical-align:baseline}sub{bottom:-4px}sup{top:-8px}a:not([href]):not([class]),a:not([href]):not([class]):hover{color:inherit;text-decoration:none}pre{background-color:#eee;line-height:1.5;max-width:100%;padding:15px;text-align:left;display:block;margin-top:0;margin-bottom:15px;overflow:auto}[dir=rtl] pre{text-align:right}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;direction:ltr;unicode-bidi:bidi-override}code,pre{font-size:.875rem}code{color:#d63384;word-wrap:break-word;display:inline-block;padding:3px 10px;border-radius:3px}kbd,samp{font-size:1rem}pre code{font-size:inherit;word-break:normal}a>code,pre code{color:inherit}kbd{padding:.2rem .4rem;font-size:.875em;color:#fff;background-color:#212529;border-radius:.2rem;padding:2px 5px;border-radius:4px}kbd kbd{padding:0;font-size:1em;font-weight:700}figure{margin:0 0 15px}img,svg{vertical-align:middle}table{caption-side:bottom;border-collapse:collapse;width:100%;border:0;box-shadow:0 4px 10px rgba(0,0,0,.1);margin:15px 0 25px}table caption{caption-side:top;text-align:center;padding-top:0;padding-bottom:10px;color:#6c757d}code,table tfoot,table thead{background-color:#f9f9f9}table tbody tr{border-bottom:1px solid #eee}table tbody tr:last-child{border-bottom:none}table td,table th{padding:10px 15px}th{text-align:inherit;text-align:-webkit-match-parent}button{border-radius:0}button:focus:not(:focus-visible){outline:0}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}select:disabled{opacity:1}[list]::-webkit-calendar-picker-indicator{display:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}::-moz-focus-inner{padding:0;border-style:none}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{float:left;width:100%;padding:0;margin-bottom:.5rem;font-size:calc(1.275rem + .3vw);line-height:inherit}@media (min-width:1200px){legend{font-size:1.5rem}}legend+*{clear:left}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-fields-wrapper,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-text,::-webkit-datetime-edit-year-field{padding:0}::-webkit-inner-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:textfield}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-color-swatch-wrapper{padding:0}::file-selector-button{font:inherit}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}iframe{border:0}summary{display:list-item;cursor:pointer}progress{vertical-align:baseline}[hidden]{display:none!important}img{height:auto;max-width:100%}embed,iframe,object{margin-bottom:20px;max-width:100%}button:focus,input:focus{outline:0}:focus,a:focus,button:not(.hp-btn):focus{outline:1px solid #000;outline-offset:8px}:focus:not(:focus-visible),a:focus:not(:focus-visible),button:not(.hp-btn):focus:not(:focus-visible){outline:0}:focus-visible,a:focus-visible,button:not(.hp-btn):focus-visible{outline:1px solid #000;outline-offset:8px}.main-wrapper>:not([class*=-section-element]):not(.alignwide):not(.alignfull){max-width:var(--wp--style--global--content-size)}.main-wrapper>:not([class*=-section-element]):not(.alignfull){margin-left:auto;margin-right:auto}.main-wrapper>:not([class*=-section-element]).alignwide{max-width:var(--wp--style--global--wide-size)}.main-wrapper>:not([class*=-section-element]).alignfull{max-width:none}.container,.container-wide{max-width:var(--wp--style--global--content-size);margin-left:auto;margin-right:auto}.container-wide{max-width:var(--wp--style--global--wide-size)}.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:30px;padding-top:20px;font-weight:700;line-height:1.5}.h1{font-size:clamp(2.625rem,2.625rem + (1vw - .36rem)*1.2136,3.25rem)}.h2{font-size:clamp(2.375rem,2.375rem + (1vw - .36rem)*.7282,2.75rem)}.h3{font-size:clamp(2rem,2rem + (1vw - .36rem)*.7282,2.375rem)}.h4{font-size:clamp(1.75rem,1.75rem + (1vw - .36rem)*.4854,2rem)}.h5{font-size:clamp(1.25rem,1.25rem + (1vw - .36rem)*.7282,1.625rem)}.h6{font-size:clamp(1.125rem,1.125rem + (1vw - .36rem)*.4854,1.375rem)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
